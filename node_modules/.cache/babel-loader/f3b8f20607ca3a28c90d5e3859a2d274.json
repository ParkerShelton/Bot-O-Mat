{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/home/Home.js\";\nimport React, { Component } from 'react';\nimport Button from '../button/Button';\nimport Robot from '../robot/Robot';\nimport Form from '../form/Form';\nimport EditForm from '../form/EditForm';\nimport '../../Globals.css';\nimport './Home.css';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.renderModal = function () {\n      if (_this.state.showAddModal === true) {\n        return React.createElement(Form, {\n          formData: _this.props.formData,\n          addRobot: _this.props.addRobot,\n          handleChange: _this.props.handleChange,\n          robotTypes: _this.props.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      } else if (_this.state.showEditModal === true) {\n        return React.createElement(EditForm, {\n          robot: _this.state.selectedRobot,\n          editRobot: _this.props.editRobot,\n          handleChange: _this.propshandleChange,\n          robotTypes: _this.props.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.handleBtnClick = function (formType, robot) {\n      if (formType === \"add\" && _this.state.showAddModal === false) {\n        _this.setState({\n          showAddModal: true\n        });\n      }\n\n      if (formType === \"edit\" && _this.state.showEditModal === false) {\n        _this.setState({\n          showEditModal: true,\n          selectedRobot: robot\n        });\n      }\n    };\n\n    _this.closeModal = function (e, formType) {\n      e.preventDefault();\n\n      if (formType === \"add\" && _this.state.showAddModal === true) {\n        _this.setState({\n          showAddModal: false\n        });\n      } else if (formType === \"edit\" && _this.state.showEditModal === true) {\n        _this.setState({\n          showEditModal: false\n        });\n      }\n    };\n\n    _this.renderRobots = function () {\n      if (_this.props.robotList !== null) {\n        var robotList = _this.props.robotList.map(function (robot) {\n          return React.createElement(Robot, {\n            handleBtnClick: _this.handleBtnClick,\n            deleteRobot: _this.props.deleteRobot,\n            robot: robot,\n            key: robot.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        });\n\n        return robotList;\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleSearchChange = function (e) {\n      _this.setState({\n        searchString: e.target.value\n      });\n    };\n\n    _this.state = {\n      showAddModal: false,\n      showEditModal: false,\n      searchString: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.renderModal(), React.createElement(\"div\", {\n        className: \"userInputContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleBtnClick: this.handleBtnClick,\n        text: \"Add Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Search\",\n        id: \"search\",\n        onChange: function onChange(e) {\n          return _this2.handleSearchChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftColumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"robotListContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.renderRobots())), React.createElement(\"div\", {\n        className: \"rightColumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/home/Home.js"],"names":["React","Component","Button","Robot","Form","EditForm","Home","props","renderModal","state","showAddModal","formData","addRobot","handleChange","robotTypes","closeModal","showEditModal","selectedRobot","editRobot","propshandleChange","handleBtnClick","formType","robot","setState","e","preventDefault","renderRobots","robotList","map","deleteRobot","id","handleSearchChange","searchString","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../button/Button';\nimport Robot from '../robot/Robot';\nimport Form from '../form/Form';\nimport EditForm from '../form/EditForm';\nimport '../../Globals.css';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddModal: false,\n      showEditModal: false,\n      searchString: \"\"\n    }\n  }\n\n  renderModal = () => {\n    if(this.state.showAddModal === true) {\n      return <Form \n        formData={this.props.formData} \n        addRobot={this.props.addRobot} \n        handleChange={this.props.handleChange} \n        robotTypes={this.props.robotTypes} \n        closeModal={this.closeModal} \n      />\n\n    } else if(this.state.showEditModal === true) {\n\n       return <EditForm \n        robot={this.state.selectedRobot}  \n        editRobot={this.props.editRobot} \n        handleChange={this.propshandleChange} \n        robotTypes={this.props.robotTypes} \n        closeModal={this.closeModal} \n       />     \n    }\n  }\n\n  handleBtnClick = (formType, robot) => {\n    if(formType === \"add\" && this.state.showAddModal === false) {\n      this.setState({showAddModal: true});\n    }\n\n    if(formType === \"edit\" && this.state.showEditModal === false) {\n      this.setState({\n        showEditModal: true,\n        selectedRobot: robot\n      });\n    }\n\n  }\n\n  closeModal = (e, formType) => {\n    e.preventDefault();\n    \n\n    if(formType === \"add\" && this.state.showAddModal === true) {\n      this.setState({showAddModal: false});\n    } else if (formType === \"edit\" && this.state.showEditModal === true) {\n      this.setState({showEditModal: false});\n    }\n  }\n\n  renderRobots = () => {\n    if(this.props.robotList !== null) {\n      \n      const robotList = this.props.robotList.map((robot) => {\n        return <Robot handleBtnClick={this.handleBtnClick} deleteRobot={this.props.deleteRobot} robot={robot} key={robot.id} />\n      });\n      return robotList;\n\n    } else {\n      return null;\n    }\n  }\n  \n  handleSearchChange = (e) => {\n    this.setState({searchString: e.target.value});\n\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        {this.renderModal()}\n\n        <div className=\"userInputContainer\">\n          <Button handleBtnClick={this.handleBtnClick} text=\"Add Robot\"/>\n\n          <label htmlFor=\"search\"></label>\n          <input placeholder=\"Search\" id=\"search\" onChange={(e) => this.handleSearchChange(e)}/>\n        </div>\n\n        <div className=\"contentContainer\">\n\n          <div className=\"leftColumn\">\n            <div className=\"robotListContainer\">\n              {this.renderRobots()}\n            </div>  \n          </div>\n\n          <div className=\"rightColumn\">\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}