{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/App.js\";\nimport React, { Component } from 'react';\nimport Button from './components/button/Button';\nimport Robot from './components/robot/Robot';\nimport Form from './components/form/Form';\nimport './Globals.css';\nimport './App.css';\nimport tasks from '../tasks.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.fetchRobots();\n\n      _this.fetchRobotTypes();\n\n      _this.fetchTasks();\n    };\n\n    _this.renderModal = function () {\n      if (_this.state.showAddModal === true) {\n        return React.createElement(Form, {\n          addRobot: _this.addRobot,\n          handleChange: _this.handleChange,\n          robotTypes: _this.state.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleBtnClick = function () {\n      if (_this.state.showAddModal === false) {\n        _this.setState({\n          showAddModal: true\n        });\n      }\n    };\n\n    _this.closeModal = function (e) {\n      e.preventDefault();\n\n      if (_this.state.showAddModal === true) {\n        _this.setState({\n          showAddModal: false\n        });\n      }\n    };\n\n    _this.renderRobots = function () {\n      if (_this.state.robotList !== null) {\n        var robotList = _this.state.robotList.map(function (robot) {\n          return React.createElement(Robot, {\n            deleteRobot: _this.deleteRobot,\n            robot: robot,\n            key: robot.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        });\n\n        return robotList;\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleChange = function (e, name) {\n      var formData = _this.state.formData;\n      formData[name] = e.target.value;\n\n      _this.setState({\n        formData: formData\n      });\n\n      console.log(_this.state.formData);\n    };\n\n    _this.fetchRobots = function () {\n      var url = \"http://localhost:5000/robots\";\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (resJSON) {\n        _this.setState({\n          robotList: resJSON\n        });\n      });\n    };\n\n    _this.fetchRobotTypes = function () {\n      var url = \"http://localhost:5000/types\";\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (resJSON) {\n        _this.setState({\n          robotTypes: resJSON\n        });\n      });\n    };\n\n    _this.fetchTasks = function () {\n      var url = \"http://localhost:5000/tasks\";\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (resJSON) {\n        _this.setState({\n          tasks: resJSON\n        });\n      }).then(function () {// this.getRobotTasks();\n      });\n    };\n\n    _this.addRobot = function () {\n      fetch('http://localhost:5000/robots', {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(_this.state.formData)\n      }).then(function (res) {\n        console.log(res.insertId);\n        return res.json();\n      }).then(function () {// this.getRobotTasks();\n      });\n    };\n\n    _this.deleteRobot = function (id) {\n      var url = \"http://localhost:5000/robots/\".concat(id);\n      fetch(url, {\n        method: 'DELETE'\n      }).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.state = {\n      robotList: null,\n      robotTypes: null,\n      tasks: null,\n      showAddModal: false,\n      lastId: null,\n      formData: {\n        name: null,\n        type: null\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n\n    /*---------------------------*/\n    //            \n\n    /*---------------------------*/\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Bot-O-Mat\"), this.renderModal(), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleBtnClick: this.handleBtnClick,\n        text: \"Add Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"robotListContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.renderRobots())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/App.js"],"names":["React","Component","Button","Robot","Form","tasks","App","props","componentDidMount","fetchRobots","fetchRobotTypes","fetchTasks","renderModal","state","showAddModal","addRobot","handleChange","robotTypes","closeModal","handleBtnClick","setState","e","preventDefault","renderRobots","robotList","map","robot","deleteRobot","name","formData","target","value","console","log","url","fetch","then","res","json","resJSON","method","headers","body","JSON","stringify","insertId","id","lastId","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from './components/button/Button';\nimport Robot from './components/robot/Robot';\nimport Form from './components/form/Form';\nimport './Globals.css';\nimport './App.css';\n\nimport tasks from '../tasks.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      robotList: null,\n      robotTypes: null,\n      tasks: null,\n      showAddModal: false,\n      lastId: null,\n\n      formData: {\n        name: null,\n        type: null\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchRobots();\n    this.fetchRobotTypes();\n    this.fetchTasks();\n\n  };\n\n  renderModal = () => {\n    if(this.state.showAddModal === true) {\n      return <Form addRobot={this.addRobot} handleChange={this.handleChange} robotTypes={this.state.robotTypes} closeModal={this.closeModal} />\n    } else {\n      return null;\n    }\n  }\n\n  handleBtnClick = () => {\n    if(this.state.showAddModal === false) {\n      this.setState({showAddModal: true});\n    }\n  }\n\n  closeModal = (e) => {\n    e.preventDefault();\n    \n    if(this.state.showAddModal === true) {\n      this.setState({showAddModal: false});\n    }\n  }\n\n  renderRobots = () => {\n    if(this.state.robotList !== null) {\n      \n      const robotList = this.state.robotList.map((robot) => {\n        return <Robot deleteRobot={this.deleteRobot} robot={robot} key={robot.name} />\n      });\n      return robotList;\n\n    } else {\n      return null;\n    }\n  }\n\n  handleChange = (e, name) => {\n    let formData = this.state.formData;\n\n    formData[name] = e.target.value;\n    this.setState({formData});\n    console.log(this.state.formData);\n  }\n\n/*---------------------------*/\n//            API\n/*---------------------------*/\n\n  fetchRobots = () => {\n    const url = \"http://localhost:5000/robots\";\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((resJSON) => {\n        this.setState({robotList: resJSON});\n      });\n  }\n\n  fetchRobotTypes = () => {\n    const url = \"http://localhost:5000/types\";\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((resJSON) => {\n        this.setState({robotTypes: resJSON});\n      });    \n  }\n\n  fetchTasks = () => {\n    const url = \"http://localhost:5000/tasks\";\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((resJSON) => {\n        this.setState({tasks: resJSON});\n      }).then(() => {\n        // this.getRobotTasks();\n      }); \n  }\n\n  addRobot = () => {\n\n    fetch('http://localhost:5000/robots', {\n      method: 'POST',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    }).then((res) => {\n      console.log(res.insertId);\n      return res.json(); \n    }).then (() => {\n      // this.getRobotTasks();\n    });\n  }\n\n  // getRobotTasks = () => {\n  //   var\ttasks = [];\n  //   var taskAmount = 0;\n\n  //   while(this.state.tasks !== null && taskAmount < 5) {\n  //     var taskNumber = Math.floor(Math.random() * this.state.tasks.length) + 1;\n\n  //     if(tasks.includes(taskNumber) === false) {\n  //       tasks.push(taskNumber);\n  //     } else {\n  //       continue;\n  //     }\n\n  //     taskAmount++;\n  //   }\n  // }\n\n  deleteRobot = (id) => {\n    let url = `http://localhost:5000/robots/${id}`;\n\n    fetch(url, {\n      method: 'DELETE',\n    }).then(res => {\n      return res.json();\n    });\n  }\n\n/*---------------------------*/\n//            \n/*---------------------------*/\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <h1>Bot-O-Mat</h1>\n\n        {this.renderModal()}\n        \n        <div className=\"contentContainer\">\n          <Button handleBtnClick={this.handleBtnClick} text=\"Add Robot\"/>\n\n          <div className=\"robotListContainer\">\n            {this.renderRobots()}\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}