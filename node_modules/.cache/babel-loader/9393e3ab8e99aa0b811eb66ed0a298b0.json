{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/components/home/Home.js\";\nimport React, { Component } from 'react';\nimport Button from '../button/Button';\nimport Robot from '../robot/Robot';\nimport Form from '../form/Form';\nimport EditForm from '../form/EditForm';\nimport '../../Globals.css';\nimport './Home.css';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.renderModal = function () {\n      if (_this.state.showAddModal === true) {\n        return React.createElement(Form, {\n          formData: _this.state.formData,\n          addRobot: _this.addRobot,\n          handleChange: _this.handleChange,\n          robotTypes: _this.props.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      } else if (_this.state.showEditModal === true) {\n        return React.createElement(EditForm, {\n          robot: _this.state.selectedRobot,\n          editRobot: _this.editRobot,\n          handleChange: _this.handleChange,\n          robotTypes: _this.props.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.handleBtnClick = function (formType, robot) {\n      if (formType === \"add\" && _this.state.showAddModal === false) {\n        _this.setState({\n          showAddModal: true\n        });\n      }\n\n      if (formType === \"edit\" && _this.state.showEditModal === false) {\n        _this.setState({\n          showEditModal: true,\n          selectedRobot: robot\n        });\n      }\n    };\n\n    _this.closeModal = function (e, formType) {\n      e.preventDefault();\n\n      if (formType === \"add\" && _this.state.showAddModal === true) {\n        _this.setState({\n          showAddModal: false\n        });\n      } else if (formType === \"edit\" && _this.state.showEditModal === true) {\n        _this.setState({\n          showEditModal: false\n        });\n      }\n    };\n\n    _this.renderRobots = function () {\n      if (_this.props.robotList !== null) {\n        var robotList = _this.props.robotList.map(function (robot) {\n          return React.createElement(Robot, {\n            handleBtnClick: _this.handleBtnClick,\n            deleteRobot: _this.deleteRobot,\n            robot: robot,\n            key: robot.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n        });\n\n        return robotList;\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleChange = function (e, name) {\n      var formData = _this.state.formData;\n      formData[name] = e.target.value;\n\n      _this.setState({\n        formData: formData\n      });\n\n      console.log(_this.state.formData);\n    };\n\n    _this.state = {\n      showAddModal: false,\n      showEditModal: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Bot-O-Mat\"), this.renderModal(), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleBtnClick: this.handleBtnClick,\n        text: \"Add Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"robotListContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderRobots())));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/components/home/Home.js"],"names":["React","Component","Button","Robot","Form","EditForm","Home","props","renderModal","state","showAddModal","formData","addRobot","handleChange","robotTypes","closeModal","showEditModal","selectedRobot","editRobot","handleBtnClick","formType","robot","setState","e","preventDefault","renderRobots","robotList","map","deleteRobot","name","target","value","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../button/Button';\nimport Robot from '../robot/Robot';\nimport Form from '../form/Form';\nimport EditForm from '../form/EditForm';\nimport '../../Globals.css';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddModal: false,\n      showEditModal: false,      \n    }\n  }\n\n  renderModal = () => {\n    if(this.state.showAddModal === true) {\n      return <Form formData={this.state.formData} addRobot={this.addRobot} handleChange={this.handleChange} robotTypes={this.props.robotTypes} closeModal={this.closeModal} />\n\n    } else if(this.state.showEditModal === true) {\n\n       return <EditForm robot={this.state.selectedRobot}  editRobot={this.editRobot} handleChange={this.handleChange} robotTypes={this.props.robotTypes} closeModal={this.closeModal} />     \n    }\n  }\n\n  handleBtnClick = (formType, robot) => {\n    if(formType === \"add\" && this.state.showAddModal === false) {\n      this.setState({showAddModal: true});\n    }\n\n    if(formType === \"edit\" && this.state.showEditModal === false) {\n      this.setState({\n        showEditModal: true,\n        selectedRobot: robot\n      });\n    }\n\n  }\n\n  closeModal = (e, formType) => {\n    e.preventDefault();\n    \n\n    if(formType === \"add\" && this.state.showAddModal === true) {\n      this.setState({showAddModal: false});\n    } else if (formType === \"edit\" && this.state.showEditModal === true) {\n      this.setState({showEditModal: false});\n    }\n  }\n\n  renderRobots = () => {\n    if(this.props.robotList !== null) {\n      \n      const robotList = this.props.robotList.map((robot) => {\n        return <Robot handleBtnClick={this.handleBtnClick} deleteRobot={this.deleteRobot} robot={robot} key={robot.name} />\n      });\n      return robotList;\n\n    } else {\n      return null;\n    }\n  }\n  \n  handleChange = (e, name) => {\n    let formData = this.state.formData;\n\n    formData[name] = e.target.value;\n    this.setState({formData});\n    console.log(this.state.formData);\n  }    \n\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1>Bot-O-Mat</h1>\n        {this.renderModal()}\n\n        <div className=\"contentContainer\">\n          <Button handleBtnClick={this.handleBtnClick} text=\"Add Robot\"/>\n\n          <div className=\"robotListContainer\">\n            {this.renderRobots()}\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}