{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/App.js\";\nimport React, { Component } from 'react';\nimport Button from './components/button/Button';\nimport Robot from './components/robot/Robot';\nimport Form from './components/form/Form';\nimport './Globals.css';\nimport './App.css';\nimport tasks from '../tasks.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.fetchRobots();\n\n      _this.fetchRobotTypes();\n    };\n\n    _this.renderModal = function () {\n      if (_this.state.showAddModal === true) {\n        return React.createElement(Form, {\n          robotTypes: _this.state.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleBtnClick = function () {\n      if (_this.state.showAddModal === false) {\n        _this.setState({\n          showAddModal: true\n        });\n      }\n    };\n\n    _this.closeModal = function (e) {\n      e.preventDefault();\n\n      if (_this.state.showAddModal === true) {\n        _this.setState({\n          showAddModal: false\n        });\n      }\n    };\n\n    _this.renderRobots = function () {\n      if (_this.state.robotList !== null) {\n        var robotList = _this.state.robotList.map(function (robot) {\n          return React.createElement(Robot, {\n            robot: robot,\n            key: robot.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          });\n        });\n\n        return robotList;\n      } else {\n        return null;\n      }\n    };\n\n    _this.state = {\n      robotList: null,\n      robotTypes: null,\n      tasks: tasks,\n      showAddModal: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n\n    /* */\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Bot-O-Mat\"), this.renderModal(), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleBtnClick: this.handleBtnClick,\n        text: \"Add Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"robotListContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.renderRobots())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/App.js"],"names":["React","Component","Button","Robot","Form","tasks","App","props","componentDidMount","fetchRobots","fetchRobotTypes","renderModal","state","showAddModal","robotTypes","closeModal","handleBtnClick","setState","e","preventDefault","renderRobots","robotList","map","robot","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,eAAP;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,eAAlB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAWnBC,iBAXmB,GAWC,YAAM;AACxB,YAAKC,WAAL;;AACA,YAAKC,eAAL;AACD,KAdkB;;AAAA,UAgBnBC,WAhBmB,GAgBL,YAAM;AAClB,UAAG,MAAKC,KAAL,CAAWC,YAAX,KAA4B,IAA/B,EAAqC;AACnC,eAAO,oBAAC,IAAD;AAAM,UAAA,UAAU,EAAE,MAAKD,KAAL,CAAWE,UAA7B;AAAyC,UAAA,UAAU,EAAE,MAAKC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KAtBkB;;AAAA,UAwBnBC,cAxBmB,GAwBF,YAAM;AACrB,UAAG,MAAKJ,KAAL,CAAWC,YAAX,KAA4B,KAA/B,EAAsC;AACpC,cAAKI,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAAE;AAAf,SAAd;AACD;AACF,KA5BkB;;AAAA,UA8BnBE,UA9BmB,GA8BN,UAACG,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAG,MAAKP,KAAL,CAAWC,YAAX,KAA4B,IAA/B,EAAqC;AACnC,cAAKI,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAAE;AAAf,SAAd;AACD;AACF,KApCkB;;AAAA,UAsCnBO,YAtCmB,GAsCJ,YAAM;AACnB,UAAG,MAAKR,KAAL,CAAWS,SAAX,KAAyB,IAA5B,EAAkC;AAChC,YAAMA,SAAS,GAAG,MAAKT,KAAL,CAAWS,SAAX,CAAqBC,GAArB,CAAyB,UAACC,KAAD,EAAW;AACpD,iBAAO,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAEA,KAAd;AAAqB,YAAA,GAAG,EAAEA,KAAK,CAACC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFiB,CAAlB;;AAGA,eAAOH,SAAP;AAED,OAND,MAMO;AACL,eAAO,IAAP;AACD;AACF,KAhDkB;;AAGjB,UAAKT,KAAL,GAAa;AACXS,MAAAA,SAAS,EAAE,IADA;AAEXP,MAAAA,UAAU,EAAE,IAFD;AAGXT,MAAAA,KAAK,EAAEA,KAHI;AAIXQ,MAAAA,YAAY,EAAE;AAJH,KAAb;AAHiB;AASlB;;;;;AA0CH;6BAMW;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGG,KAAKF,WAAL,EAHH,EAKE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAE,KAAKK,cAA7B;AAA6C,QAAA,IAAI,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,YAAL,EADH,CAHF,CALF,CADF;AAeD;;;;EA3EenB,S;;AA8ElB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from './components/button/Button';\nimport Robot from './components/robot/Robot';\nimport Form from './components/form/Form';\nimport './Globals.css';\nimport './App.css';\n\nimport tasks from '../tasks.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      robotList: null,\n      robotTypes: null,\n      tasks: tasks,\n      showAddModal: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchRobots();\n    this.fetchRobotTypes();\n  };\n\n  renderModal = () => {\n    if(this.state.showAddModal === true) {\n      return <Form robotTypes={this.state.robotTypes} closeModal={this.closeModal} />\n    } else {\n      return null;\n    }\n  }\n\n  handleBtnClick = () => {\n    if(this.state.showAddModal === false) {\n      this.setState({showAddModal: true});\n    }\n  }\n\n  closeModal = (e) => {\n    e.preventDefault();\n    \n    if(this.state.showAddModal === true) {\n      this.setState({showAddModal: false});\n    }\n  }\n\n  renderRobots = () => {\n    if(this.state.robotList !== null) {\n      const robotList = this.state.robotList.map((robot) => {\n        return <Robot robot={robot} key={robot.name} />\n      });\n      return robotList;\n\n    } else {\n      return null;\n    }\n  }\n\n\n/* */\n\n\n\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <h1>Bot-O-Mat</h1>\n\n        {this.renderModal()}\n\n        <div className=\"contentContainer\">\n          <Button handleBtnClick={this.handleBtnClick} text=\"Add Robot\"/>\n\n          <div className=\"robotListContainer\">\n            {this.renderRobots()}\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}