{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/App.js\";\nimport React, { Component } from 'react';\nimport Button from './components/button/Button';\nimport Robot from './components/robot/Robot';\nimport Form from './components/form/Form';\nimport './Globals.css';\nimport './App.css';\nimport robotData from '../robotList.json';\nimport robotTypes from '../robotTypes.json';\nimport tasks from '../tasks.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.renderModal = function () {\n      if (_this.state.showAddModal === true) {\n        return React.createElement(Form, {\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleBtnClick = function () {\n      if (_this.state.showAddModal === false) {\n        _this.setState({\n          showAddModal: true\n        });\n      }\n    };\n\n    _this.closeModal = function (e) {\n      e.preventDefault();\n\n      if (_this.state.showAddModal === true) {\n        _this.setState({\n          showAddModal: false\n        });\n      }\n    };\n\n    _this.state = {\n      robotList: robotData,\n      robotTypes: robotTypes,\n      tasks: \"\",\n      showAddModal: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // addRobot = (name, type) => {\n    //   const robotList = this.state.robotList;\n    //   const robot = {\n    //     name: name,\n    //     type: type\n    //   }\n    //   const newRobotList = robotList.push(...robotList, robot);\n    //   console.log(newRobotList);\n    // }\n    value: function render() {\n      var robotList = this.state.robotList.map(function (robot) {\n        return React.createElement(Robot, {\n          robot: robot,\n          key: robot.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Bot-O-Mat\"), console.log(this.state.robotList), this.renderModal(), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        handleBtnClick: this.handleBtnClick,\n        text: \"Add Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"robotListContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, robotList)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Git/Bot-O-Mat/bot-o-mat/src/app/App.js"],"names":["React","Component","Button","Robot","Form","robotData","robotTypes","tasks","App","props","renderModal","state","showAddModal","closeModal","handleBtnClick","setState","e","preventDefault","robotList","map","robot","name","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,eAAP;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAWnBC,WAXmB,GAWL,YAAM;AAClB,UAAG,MAAKC,KAAL,CAAWC,YAAX,KAA4B,IAA/B,EAAqC;AACnC,eAAO,oBAAC,IAAD;AAAM,UAAA,UAAU,EAAE,MAAKC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KAjBkB;;AAAA,UAmBnBC,cAnBmB,GAmBF,YAAM;AACrB,UAAG,MAAKH,KAAL,CAAWC,YAAX,KAA4B,KAA/B,EAAsC;AACpC,cAAKG,QAAL,CAAc;AAACH,UAAAA,YAAY,EAAE;AAAf,SAAd;AACD;AACF,KAvBkB;;AAAA,UAyBnBC,UAzBmB,GAyBN,UAACG,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAG,MAAKN,KAAL,CAAWC,YAAX,KAA4B,IAA/B,EAAqC;AACnC,cAAKG,QAAL,CAAc;AAACH,UAAAA,YAAY,EAAE;AAAf,SAAd;AACD;AACF,KA/BkB;;AAGjB,UAAKD,KAAL,GAAa;AACXO,MAAAA,SAAS,EAAEb,SADA;AAEXC,MAAAA,UAAU,EAAEA,UAFD;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXK,MAAAA,YAAY,EAAE;AAJH,KAAb;AAHiB;AASlB;;;;AAwBD;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;6BAGS;AAEP,UAAMM,SAAS,GAAG,KAAKP,KAAL,CAAWO,SAAX,CAAqBC,GAArB,CAAyB,UAACC,KAAD,EAAW;AACpD,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAEA,KAAd;AAAqB,UAAA,GAAG,EAAEA,KAAK,CAACC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFiB,CAAlB;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGGC,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWO,SAAvB,CAHH,EAKG,KAAKR,WAAL,EALH,EAOE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAE,KAAKI,cAA7B;AAA6C,QAAA,IAAI,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,SADH,CAHF,CAPF,CADF;AAiBD;;;;EAvEejB,S;;AA0ElB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from './components/button/Button';\nimport Robot from './components/robot/Robot';\nimport Form from './components/form/Form';\nimport './Globals.css';\nimport './App.css';\n\nimport robotData from '../robotList.json';\nimport robotTypes from '../robotTypes.json';\nimport tasks from '../tasks.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      robotList: robotData,\n      robotTypes: robotTypes,\n      tasks: \"\",\n      showAddModal: false\n    }\n  }\n\n  renderModal = () => {\n    if(this.state.showAddModal === true) {\n      return <Form closeModal={this.closeModal} />\n    } else {\n      return null;\n    }\n  }\n\n  handleBtnClick = () => {\n    if(this.state.showAddModal === false) {\n      this.setState({showAddModal: true});\n    }\n  }\n\n  closeModal = (e) => {\n    e.preventDefault();\n    \n    if(this.state.showAddModal === true) {\n      this.setState({showAddModal: false});\n    }\n  }\n\n  // addRobot = (name, type) => {\n  //   const robotList = this.state.robotList;\n\n  //   const robot = {\n  //     name: name,\n  //     type: type\n  //   }\n\n  //   const newRobotList = robotList.push(...robotList, robot);\n\n  //   console.log(newRobotList);\n  // }\n\n\n  render() {\n\n    const robotList = this.state.robotList.map((robot) => {\n      return <Robot robot={robot} key={robot.name} />\n    })\n\n    return (\n      <div className=\"App\">\n        <h1>Bot-O-Mat</h1>\n\n        {console.log(this.state.robotList)}\n\n        {this.renderModal()}\n\n        <div className=\"contentContainer\">\n          <Button handleBtnClick={this.handleBtnClick} text=\"Add Robot\"/>\n\n          <div className=\"robotListContainer\">\n            {robotList}\n          </div>  \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}