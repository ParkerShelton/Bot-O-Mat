{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/robot/Robot.js\";\nimport React, { Component } from 'react';\nimport Task from '../task/Task';\nimport '../../Globals.css';\nimport './Robot.css';\n\nvar Robot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Robot, _Component);\n\n  function Robot(props) {\n    var _this;\n\n    _classCallCheck(this, Robot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Robot).call(this, props));\n\n    _this.taskCompleted = function (points) {\n      var completed = _this.state.completed;\n      var remaining = _this.state.remaining;\n      var score = _this.state.score;\n      completed++;\n      remaining--;\n      score = score + points;\n      console.log(points);\n\n      _this.setState({\n        completed: completed,\n        remaining: remaining,\n        score: score\n      });\n    };\n\n    _this.renderTasks = function () {\n      if (_this.props.robot.tasks !== null) {\n        var taskList = _this.props.robot.tasks.map(function (task, index) {\n          return React.createElement(Task, {\n            taskCompleted: _this.taskCompleted,\n            key: index,\n            task: task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          });\n        });\n\n        return taskList;\n      } else {\n        return null;\n      }\n    };\n\n    _this.state = {\n      completed: 0,\n      remaining: 5,\n      score: 0\n    };\n    return _this;\n  }\n\n  _createClass(Robot, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var type = this.props.robot.type.toLowerCase().replace(/^\\w/, function (c) {\n        return c.toUpperCase();\n      });\n      return React.createElement(\"div\", {\n        className: \"Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/imgs/robot/deleteButton.png\",\n        alt: \"Delete Button\",\n        className: \"deleteBtn\",\n        onClick: function onClick() {\n          return _this2.props.deleteRobot(_this2.props.robot.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"robotCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"profileImg\",\n        alt: \"Robot Profile\",\n        src: \"/imgs/robot/\".concat(this.props.robot.type, \".png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.robot.name, \" - \", type))), React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdownLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Tasks\"), React.createElement(\"div\", {\n        className: \"taskCountContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Score: \", this.state.score), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Completed: \", this.state.completed), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Remaining: \", this.state.remaining))), React.createElement(\"div\", {\n        className: \"dropdownRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderTasks()))));\n    }\n  }]);\n\n  return Robot;\n}(Component);\n\nexport default Robot;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/robot/Robot.js"],"names":["React","Component","Task","Robot","props","taskCompleted","points","completed","state","remaining","score","console","log","setState","renderTasks","robot","tasks","taskList","map","task","index","type","toLowerCase","replace","c","toUpperCase","deleteRobot","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Task from '../task/Task';\nimport '../../Globals.css';\nimport './Robot.css';\n\nclass Robot extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      completed: 0,\n      remaining: 5,\n      score: 0\n    }\n  }\n\n\n  taskCompleted = (points) => {\n    let completed = this.state.completed;\n    let remaining = this.state.remaining;\n    let score = this.state.score;\n\n    completed++;\n    remaining--;\n    score = score + points;\n\n    console.log(points)\n\n    this.setState({\n      completed: completed,\n      remaining: remaining,\n      score: score\n    });\n  }\n\n  renderTasks = () => {\n    \n    if(this.props.robot.tasks !== null) {\n      let taskList = this.props.robot.tasks.map((task, index) => {\n        return <Task taskCompleted={this.taskCompleted} key={index} task={task}/>\n      });\n      return taskList;\n\n    } else {\n\n      return null;\n    }\n  }\n\n  render() {\n\n    const type = (this.props.robot.type.toLowerCase()).replace(/^\\w/, c => c.toUpperCase());\n\n    return (\n      <div className=\"Robot\">\n        <img src=\"/imgs/robot/deleteButton.png\" alt=\"Delete Button\" className=\"deleteBtn\" onClick={() => this.props.deleteRobot(this.props.robot.id)}/>\n\n        <div className=\"robotCard\">\n          <div className=\"leftSide\">\n            <img className=\"profileImg\" alt=\"Robot Profile\" src={`/imgs/robot/${this.props.robot.type}.png`} />\n\n            <h1>{this.props.robot.name} - {type}</h1>\n          </div>\n\n        </div>\n\n        <div className=\"dropdown\">\n\n          <div className=\"dropdownLeft\">\n            <h2>Tasks</h2>\n\n            <div className=\"taskCountContainer\">\n              <p>Score: {this.state.score}</p>\n              <p>Completed: {this.state.completed}</p>\n              <p>Remaining: {this.state.remaining}</p>\n            </div>\n          </div>\n\n          <div className=\"dropdownRight\">\n            <ul>\n              {this.renderTasks()}\n            </ul>          \n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Robot;\n"]},"metadata":{},"sourceType":"module"}