{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/robot/Robot.js\";\nimport React, { Component } from 'react';\nimport Task from '../task/Task';\nimport '../../Globals.css';\nimport './Robot.css';\n\nvar Robot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Robot, _Component);\n\n  function Robot(props) {\n    var _this;\n\n    _classCallCheck(this, Robot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Robot).call(this, props));\n\n    _this.taskCompleted = function () {\n      var completed = _this.state.completed;\n      var remaining = _this.state.remaining;\n      completed++;\n      remaining--;\n\n      _this.setState({\n        completed: completed,\n        remaining: remaining\n      });\n\n      if (completed === 5) {\n        _this.setState({\n          isFinished: true\n        });\n      }\n    };\n\n    _this.renderTasks = function () {\n      if (_this.props.robot.tasks !== null) {\n        var taskList = _this.props.robot.tasks.map(function (task, index) {\n          return React.createElement(Task, {\n            taskCompleted: _this.taskCompleted,\n            key: index,\n            task: task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          });\n        });\n\n        return taskList;\n      } else {\n        return null;\n      }\n    };\n\n    _this.renderCheckmark = function () {\n      if (_this.state.isFinished === false) {\n        return \"/imgs/robot/uncheck.png\";\n      } else {\n        return \"/imgs/robot/check.png\";\n      }\n    };\n\n    _this.state = {\n      isFinished: false,\n      completed: 0,\n      remaining: 5\n    };\n    return _this;\n  }\n\n  _createClass(Robot, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Robot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/imgs/robot/deleteButton.png\",\n        alt: \"Delete Button\",\n        className: \"deleteBtn\",\n        onClick: function onClick() {\n          return _this2.props.deleteRobot(_this2.props.robot.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"robotCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.robot.name, \" - \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.robot.type)), React.createElement(\"div\", {\n        className: \"rightSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Check Box\",\n        src: this.renderCheckmark(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"drop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Tasks\"), React.createElement(\"div\", {\n        className: \"taskCountContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Completed: \", this.state.completed), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Remaining: \", this.state.remaining)), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.renderTasks())));\n    }\n  }]);\n\n  return Robot;\n}(Component);\n\nexport default Robot;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/robot/Robot.js"],"names":["React","Component","Task","Robot","props","taskCompleted","completed","state","remaining","setState","isFinished","renderTasks","robot","tasks","taskList","map","task","index","renderCheckmark","deleteRobot","id","name","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Task from '../task/Task';\nimport '../../Globals.css';\nimport './Robot.css';\n\nclass Robot extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      isFinished: false,\n      completed: 0,\n      remaining: 5\n    }\n  }\n\n\n  taskCompleted = () => {\n    let completed = this.state.completed;\n    let remaining = this.state.remaining;\n\n    completed++;\n    remaining--;\n\n    this.setState({\n      completed: completed,\n      remaining: remaining\n    });\n\n    if(completed === 5) {\n      this.setState({isFinished: true});\n    }\n  }\n\n  renderTasks = () => {\n    \n    if(this.props.robot.tasks !== null) {\n      let taskList = this.props.robot.tasks.map((task, index) => {\n        return <Task taskCompleted={this.taskCompleted} key={index} task={task}/>\n      });\n      return taskList;\n\n    } else {\n\n      return null;\n    }\n  }\n\n  renderCheckmark = () => {\n    if(this.state.isFinished === false) {\n      return \"/imgs/robot/uncheck.png\";\n    } else {\n      return \"/imgs/robot/check.png\";\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"Robot\">\n        <img src=\"/imgs/robot/deleteButton.png\" alt=\"Delete Button\" className=\"deleteBtn\" onClick={() => this.props.deleteRobot(this.props.robot.id)}/>\n\n        <div className=\"robotCard\">\n          <div className=\"leftSide\">\n            <h1>{this.props.robot.name} - </h1>\n            <h2>{this.props.robot.type}</h2>\n          </div>\n\n          <div className=\"rightSide\">\n            <img alt=\"Check Box\" src={this.renderCheckmark()} />\n          </div>\n        </div>\n\n        <div className=\"dropdown\">\n          <div className=\"drop\">\n\n          </div>\n          <h2>Tasks</h2>\n\n          <div className=\"taskCountContainer\">\n            <p>Completed: {this.state.completed}</p>\n            <p>Remaining: {this.state.remaining}</p>\n          </div>\n\n          <ul>\n            {this.renderTasks()}\n          </ul>          \n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Robot;\n"]},"metadata":{},"sourceType":"module"}