{"ast":null,"code":"import _classCallCheck from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/home/Home.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/Header';\nimport Footer from '../footer/Footer';\nimport EmptyRobotList from '../emptyRobotList/EmptyRobotList'; // import Button from '../button/Button';\n\nimport RobotIcons from '../robotIcons/RobotIcons';\nimport Robot from '../robot/Robot';\nimport Form from '../form/Form';\nimport EditForm from '../form/EditForm';\nimport '../../Globals.css';\nimport './Home.css';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.renderModal = function () {\n      if (_this.state.showAddModal === true) {\n        return React.createElement(Form, {\n          formData: _this.props.formData,\n          addRobot: _this.props.addRobot,\n          handleChange: _this.props.handleChange,\n          robotTypes: _this.props.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      } else if (_this.state.showEditModal === true) {\n        return React.createElement(EditForm, {\n          robot: _this.state.selectedRobot,\n          editRobot: _this.props.editRobot,\n          handleChange: _this.propshandleChange,\n          robotTypes: _this.props.robotTypes,\n          closeModal: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.handleIconClick = function () {\n      if (_this.state.showIcons === \"Hide Icons\") {\n        _this.setState({\n          showIcons: \"Show Icons\"\n        });\n      } else {\n        _this.setState({\n          showIcons: \"Hide Icons\"\n        });\n      }\n    };\n\n    _this.handleBtnClick = function (formType, robot) {\n      if (formType === \"add\" && _this.state.showAddModal === false) {\n        _this.setState({\n          showAddModal: true\n        });\n      }\n\n      if (formType === \"edit\" && _this.state.showEditModal === false) {\n        _this.setState({\n          showEditModal: true,\n          selectedRobot: robot\n        });\n      }\n    };\n\n    _this.hideRobotsOnEmpty = function () {\n      if (_this.props.robotList !== null) {\n        if (_this.props.robotList.length > 0) {\n          return \"robotListContainer\";\n        } else {\n          return \"robotListContainer hide\";\n        }\n      }\n    };\n\n    _this.closeModal = function (e, formType) {\n      e.preventDefault();\n\n      if (formType === \"add\" && _this.state.showAddModal === true) {\n        _this.setState({\n          showAddModal: false\n        });\n      } else if (formType === \"edit\" && _this.state.showEditModal === true) {\n        _this.setState({\n          showEditModal: false\n        });\n      }\n    };\n\n    _this.renderRobots = function () {\n      if (_this.props.robotList !== null) {\n        var robots = _this.props.robotList.sort(function (a, b) {\n          return a.score < b.score;\n        });\n\n        var search = _this.state.searchString.trim().toLowerCase(); // this.setState({emptyRobotList: false});\n\n\n        if (search.length > 0) {\n          robots = robots.filter(function (robot) {\n            return robot.name.toLowerCase().match(search);\n          });\n          return robots.map(function (robot) {\n            return React.createElement(Robot, {\n              robots: robots,\n              taskCompleted: _this.props.taskCompleted,\n              handleBtnClick: _this.handleBtnClick,\n              deleteRobot: _this.props.deleteRobot,\n              robot: robot,\n              key: robot.id,\n              changeEmptyRobots: _this.changeEmptyRobots,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            });\n          });\n        } else {\n          return robots.map(function (robot) {\n            return React.createElement(Robot, {\n              robots: robots,\n              taskCompleted: _this.props.taskCompleted,\n              handleBtnClick: _this.handleBtnClick,\n              deleteRobot: _this.props.deleteRobot,\n              robot: robot,\n              key: robot.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            });\n          });\n        }\n      } else {\n        return null;\n      }\n    };\n\n    _this.renderEmptyRobotList = function () {\n      if (_this.props.showEmptyRobots === true) {\n        return React.createElement(EmptyRobotList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    };\n\n    _this.handleSearchChange = function (e) {\n      _this.setState({\n        searchString: e.target.value\n      });\n    };\n\n    _this.state = {\n      showAddModal: false,\n      showEditModal: false,\n      showIcons: \"Hide Icons\",\n      emptyRobotList: true,\n      searchString: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleSearchChange: this.handleSearchChange,\n        handleBtnClick: this.handleBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), this.renderModal(), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.renderEmptyRobotList(), React.createElement(\"div\", {\n        className: this.hideRobotsOnEmpty(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.renderRobots()), React.createElement(RobotIcons, {\n        showIcons: this.state.showIcons,\n        renderRobotIcons: this.renderRobotIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/parkersheltonr2h/Bot-O-Mat/bot-o-mat/src/app/components/home/Home.js"],"names":["React","Component","Header","Footer","EmptyRobotList","RobotIcons","Robot","Form","EditForm","Home","props","renderModal","state","showAddModal","formData","addRobot","handleChange","robotTypes","closeModal","showEditModal","selectedRobot","editRobot","propshandleChange","handleIconClick","showIcons","setState","handleBtnClick","formType","robot","hideRobotsOnEmpty","robotList","length","e","preventDefault","renderRobots","robots","sort","a","b","score","search","searchString","trim","toLowerCase","filter","name","match","map","taskCompleted","deleteRobot","id","changeEmptyRobots","renderEmptyRobotList","showEmptyRobots","handleSearchChange","target","value","emptyRobotList","renderRobotIcons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../header/Header';\nimport Footer from '../footer/Footer';\nimport EmptyRobotList from '../emptyRobotList/EmptyRobotList';\n// import Button from '../button/Button';\nimport RobotIcons from '../robotIcons/RobotIcons';\nimport Robot from '../robot/Robot';\nimport Form from '../form/Form';\nimport EditForm from '../form/EditForm';\nimport '../../Globals.css';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddModal: false,\n      showEditModal: false,\n      showIcons: \"Hide Icons\",\n      emptyRobotList: true,\n      searchString: \"\",\n    }\n  }\n\n  renderModal = () => {\n    if(this.state.showAddModal === true) {\n      return <Form \n        formData={this.props.formData} \n        addRobot={this.props.addRobot} \n        handleChange={this.props.handleChange} \n        robotTypes={this.props.robotTypes} \n        closeModal={this.closeModal} \n      />\n\n    } else if(this.state.showEditModal === true) {\n\n       return <EditForm \n        robot={this.state.selectedRobot}  \n        editRobot={this.props.editRobot} \n        handleChange={this.propshandleChange} \n        robotTypes={this.props.robotTypes} \n        closeModal={this.closeModal} \n       />     \n    }\n  }\n\n\n  handleIconClick = () => {\n    if(this.state.showIcons === \"Hide Icons\") {\n      this.setState({showIcons: \"Show Icons\"});\n    } else {\n      this.setState({showIcons: \"Hide Icons\"});\n    }\n  }\n\n  handleBtnClick = (formType, robot) => {\n    if(formType === \"add\" && this.state.showAddModal === false) {\n      this.setState({showAddModal: true});\n    }\n\n    if(formType === \"edit\" && this.state.showEditModal === false) {\n      this.setState({\n        showEditModal: true,\n        selectedRobot: robot\n      });\n    }\n  }\n\n  hideRobotsOnEmpty = () => {\n\n    if(this.props.robotList !== null) {\n      if(this.props.robotList.length > 0) {\n        return \"robotListContainer\";\n      } else {\n        return \"robotListContainer hide\";\n      }\n    }\n  }\n\n  closeModal = (e, formType) => {\n    e.preventDefault();\n\n    if(formType === \"add\" && this.state.showAddModal === true) {\n      this.setState({showAddModal: false});\n    } else if (formType === \"edit\" && this.state.showEditModal === true) {\n      this.setState({showEditModal: false});\n    }\n  }\n\n  renderRobots = () => {\n    if(this.props.robotList !== null) {\n      let robots = this.props.robotList.sort((a, b) => a.score < b.score);\n      let search = this.state.searchString.trim().toLowerCase();  \n\n      // this.setState({emptyRobotList: false});\n\n      if(search.length > 0) {\n        robots = robots.filter((robot) => {\n          return robot.name.toLowerCase().match(search);\n        });\n        return robots.map((robot) => {\n          return <Robot \n            robots={robots} \n            taskCompleted={this.props.taskCompleted} \n            handleBtnClick={this.handleBtnClick} \n            deleteRobot={this.props.deleteRobot} \n            robot={robot} \n            key={robot.id} \n            changeEmptyRobots={this.changeEmptyRobots}\n          />\n        });\n\n      } else {\n        return robots.map((robot) => {\n          return <Robot \n            robots={robots} \n            taskCompleted={this.props.taskCompleted} \n            handleBtnClick={this.handleBtnClick} \n            deleteRobot={this.props.deleteRobot} \n            robot={robot} \n            key={robot.id} \n          />\n        });\n      }\n\n    } else {\n      return null;\n    }\n  }\n\n  renderEmptyRobotList = () => {\n    if(this.props.showEmptyRobots === true) {\n      return <EmptyRobotList />;\n    } else {\n      return null;\n    }\n  }\n\n  handleSearchChange = (e) => {\n    this.setState({searchString: e.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <Header handleSearchChange={this.handleSearchChange} handleBtnClick={this.handleBtnClick}/>\n        {this.renderModal()}\n\n        <div className=\"contentContainer\">\n\n          {this.renderEmptyRobotList()}\n\n          <div className={this.hideRobotsOnEmpty()}>\n            {this.renderRobots()}\n          </div>  \n\n          <RobotIcons showIcons={this.state.showIcons} renderRobotIcons={this.renderRobotIcons} />\n\n        </div>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}